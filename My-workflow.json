{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "4b71a486-e711-4de0-a721-462c92bcc540",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -480,
        -96
      ],
      "id": "4cfdd528-cfd8-4f85-838b-02f9172efa59",
      "name": "Webhook1",
      "webhookId": "4b71a486-e711-4de0-a721-462c92bcc540"
    },
    {
      "parameters": {
        "fieldToSplitOut": "items",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -160,
        -96
      ],
      "id": "aa938c3b-1a86-4158-af67-a65125e03e36",
      "name": "Split Out"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "37e7f190-5f58-4b7b-939d-2c5d2a0ad59f",
              "leftValue": "={{ $json.pubDate }}",
              "rightValue": "={{ $today }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        0,
        -96
      ],
      "id": "3ca8637f-d5ea-4662-91e7-f65352f84756",
      "name": "Filter"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "body",
              "cssSelector": "html",
              "returnValue": "=text"
            }
          ]
        },
        "options": {
          "trimValues": false,
          "cleanUpText": true
        }
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -256,
        112
      ],
      "id": "7f0e82f3-2fa5-441f-859f-b5a45e461b67",
      "name": "HTML",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "inputText": "={{ $json.body }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.sentimentAnalysis",
      "typeVersion": 1.1,
      "position": [
        -96,
        96
      ],
      "id": "5b564b95-2191-4bdd-8e6f-e5b84e035f2f",
      "name": "Sentiment Analysis"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5",
          "mode": "list",
          "cachedResultName": "gpt-5"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -96,
        304
      ],
      "id": "b17692c0-6064-4908-9673-886fabe9eecf",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "8HQU0clxxxxxx",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1X4P288mkrOIAbUDN6mmd6bHRH476Uxxxx",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "시트1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1X4P288mkrOIAbUDN6mmd6bHRH476Uxxxx/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "date": "={{ $today }}",
            "bad": "={{ $json.count }}"
          },
          "matchingColumns": [
            "date"
          ],
          "schema": [
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "good",
              "displayName": "good",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "neural ",
              "displayName": "neural ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "bad",
              "displayName": "bad",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        448,
        464
      ],
      "id": "b4b4cdf5-65af-49a4-97ee-3daea66d4406",
      "name": "Append or update row in sheet2",
      "credentials": {
        "googleApi": {
          "id": "beHcsbOBxxxx",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nlet positive = 0\nfor (const item of $input.all()) {\n  positive++;\n}\n\nreturn [{ json: { count: positive }}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        256,
        80
      ],
      "id": "f59e5bf7-cec8-48a7-aabf-fe30aedd76fa",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nlet neutral = 0\nfor (const item of $input.all()) {\n  neutral++;\n}\n\nreturn [{ json: { count: neutral}}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        256,
        272
      ],
      "id": "2d92f63d-01e8-4d8e-b79d-bdedf3aedb4b",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nlet negative = 0\nfor (const item of $input.all()) {\n  negative++;\n}\n\nreturn [{ json: { count: negative }}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        256,
        464
      ],
      "id": "1a548d3e-99f9-4b0d-a77b-1bd1394cb151",
      "name": "Code in JavaScript2"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1X4P288mkrOIAbUDN6mmd6bHRH476Uxxxxx8",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "시트1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1X4P288mkrOIAbUDN6mmd6bHRH4xxxxx8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "date": "={{ $today }}",
            "good": "={{ $json.count }}"
          },
          "matchingColumns": [
            "date"
          ],
          "schema": [
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "good",
              "displayName": "good",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "neural ",
              "displayName": "neural ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "bad",
              "displayName": "bad",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "body",
              "displayName": "body",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        448,
        80
      ],
      "id": "5c70333c-d260-4708-b214-19f199517a7b",
      "name": "Append row in sheet",
      "credentials": {
        "googleApi": {
          "id": "beHcsbOxxxxQ",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1X4P288mkrOIAbUDN6mmd6bHRH47xxxxd8",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "시트1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1X4P288mkrOIAbUDN6mmd6bHRH476UVjyxxxx/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "date": "={{ $today }}",
            "neural ": "={{ $json.count }}"
          },
          "matchingColumns": [
            "date"
          ],
          "schema": [
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "good",
              "displayName": "good",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "neural ",
              "displayName": "neural ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "bad",
              "displayName": "bad",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        448,
        272
      ],
      "id": "2a19fd99-148c-4dcb-9da2-2d62fe97343c",
      "name": "Append or update row in sheet",
      "credentials": {
        "googleApi": {
          "id": "beHcsbOBi7xxxxx",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://openapi.naver.com/v1/search/news.json?query={{ $json.body.keyword }}&display=5&sort=date",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Naver-Client-Id",
              "value": "zHoYxzFm9Tgzxxxxx"
            },
            {
              "name": "X-Naver-Client-Secret",
              "value": "UbIxxxx"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -320,
        -96
      ],
      "id": "bfb10c9b-8a03-4ad9-99b9-d4558b86bf33",
      "name": "HTTP Request(NAVER)"
    },
    {
      "parameters": {
        "url": "={{ $json.originallink }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3"
            },
            {}
          ]
        },
        "options": {
          "allowUnauthorizedCerts": false
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -432,
        112
      ],
      "id": "30aa5bc4-7bb3-4bfc-a834-1934e0c9cbad",
      "name": "HTTP Request1(News Story)",
      "onError": "continueErrorOutput"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook1": {
      "main": [
        [
          {
            "node": "HTTP Request(NAVER)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "HTTP Request1(News Story)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Sentiment Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Sentiment Analysis",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Sentiment Analysis": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code in JavaScript2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "Append or update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript2": {
      "main": [
        [
          {
            "node": "Append or update row in sheet2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet": {
      "main": [
        []
      ]
    },
    "HTTP Request(NAVER)": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1(News Story)": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Seoul",
    "callerPolicy": "workflowsFromSameOwner",
    "availableInMCP": false
  },
  "versionId": "321b1409-5f07-4357-8d12-2b1f5752f2e5",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "86cccaac7d9342bacd55639883b5975071462f666ee1d377c622356aa57855fb"
  },
  "id": "MHXliq6tyFEySyOM",
  "tags": []
}